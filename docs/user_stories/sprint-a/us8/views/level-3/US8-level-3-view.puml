' 
' User Story: As an Admin,  I want to register new backoffice users (e.g., doctors, nurses, technicians, admins) via an out-of-band process, so that they can access the backoffice system with appropriate permissions.
'
' Acceptance Criteria:
' 
' - Backoffice users (e.g., doctors, nurses, technicians) are registered by an Admin via an internal process, not via self-registration.
' - Admin assigns roles (e.g., Doctor, Nurse, Technician) during the registration process.
' - Registered users receive a one-time setup link via email to set their password and activate their account.
' - The system enforces strong password requirements for security.
' - A confirmation email is sent to verify the userâ€™s registration.

@startuml

title US8 - Level 3 View

actor Admin as U
participant "<<component>>\nWeb Application" as web
participant "<<component>>\nPatientController" as ctrl
participant "<<component>>\nPatientService" as service
participant "<<component>>\nPatient" as pat
participant "<<component>>\nMedicalRecordNumber" as number
participant "<<component>>\nMedicalRecordNumberGenerator" as generator

participant "IPatientRepository" as patrepo
participant "ILogRepository" as logrepo
participant "IUnitOfWork" as work
database "Database" as db

U -> web : Creates new patient profile with its attributes
activate U
activate web
web -> ctrl : HttpPost new Patient
activate ctrl

ctrl -> service : await CreatePatient(dto)
activate service

service -> pat : CreateFromDTO(dto)
activate pat
pat -> number : new
activate number

number -> generator : CreateMedicalRecordNumber()
activate generator
generator -> patrepo : await GetAll()
activate patrepo
patrepo -> db : GetAll()
activate db
deactivate db

patrepo --> generator : patients
deactivate patrepo
generator --> number : generated number
deactivate generator
number --> pat : Medical Record Number
deactivate number
pat --> service : new Patient
deactivate pat

service -> patrepo : await AddAsync(patient)
activate patrepo
patrepo -> db : Add patient
activate db
deactivate db
patrepo --> service
deactivate patrepo

service -> logrepo : await AddAsync(new log)
activate logrepo
logrepo -> db : Add log
activate db
deactivate db
logrepo --> service
deactivate logrepo

service -> work : await CommitAsync()
activate work
work -> db : Commit
activate db
deactivate db
work --> service
deactivate work

service --> ctrl : patient DTO
deactivate service
ctrl --> web : confirmation
deactivate ctrl
web --> U : confirmation
deactivate web
deactivate U


@enduml