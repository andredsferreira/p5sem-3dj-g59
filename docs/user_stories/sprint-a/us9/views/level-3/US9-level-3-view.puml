' 
' User Story: As an Admin,  I want to register new backoffice users (e.g., doctors, nurses, technicians, admins) via an out-of-band process, so that they can access the backoffice system with appropriate permissions.
'
' Acceptance Criteria:
' 
' - Backoffice users (e.g., doctors, nurses, technicians) are registered by an Admin via an internal process, not via self-registration.
' - Admin assigns roles (e.g., Doctor, Nurse, Technician) during the registration process.
' - Registered users receive a one-time setup link via email to set their password and activate their account.
' - The system enforces strong password requirements for security.
' - A confirmation email is sent to verify the user’s registration.

@startuml

title US9 - Level 3 View

actor Admin as U
participant "«component»\nPatientController" as api
participant "«component»\nPatientService" as service
participant "«component»\nIPatientRepository" as repo
participant "«component»\nILogRepository" as logrepo

U -> api : Edits the attributes of a previously\nchosen patient profile
activate U
activate api
api -> service : await _service.CreatePatient(dto)
activate service

alt if the patient doesn't exist
service --> api : null
api --> U : NotFound
else 

service -> service : Validates changes
service -> repo : Update(patient)
activate repo
repo ->: Save patient profile
deactivate repo
service -> logrepo : AddAsync(new log)
activate logrepo
logrepo -> : Save new log
deactivate logrepo

alt changed data is sensitive\n(e.g., contact information)
service -> : sends notification to\nthe patient's email
end
service --> api : patient dto
deactivate service
api --> U : Ok
deactivate api
deactivate U
end
' E a parte do email?



@enduml