// <auto-generated />
using System;
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDNetCore.Migrations.DDDSample1Db
{
    [DbContext(typeof(DDDSample1DbContext))]
    [Migration("20241024234643_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DDDSample1.Domain.DomainLogs.DomainLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DomainLog", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "02b994c5-32dc-4f5a-be9e-99b24e007594",
                            ActionType = "Creation",
                            Message = "Created a new Patient (Medical Record Number = 202410000001, Name = João Camião, Email = patientA@hospital.com, PhoneNumber = 910555111)",
                            ObjectType = "Patient"
                        },
                        new
                        {
                            Id = "fbc15536-9e65-45de-a477-58f4c5a8cec7",
                            ActionType = "Creation",
                            Message = "Created a new Patient (Medical Record Number = 202410000002, Name = Bruno Silva, Email = patientB@hospital.com, PhoneNumber = 910555222)",
                            ObjectType = "Patient"
                        },
                        new
                        {
                            Id = "4c614eca-80f3-4436-b717-fa0ea3448ab2",
                            ActionType = "Creation",
                            Message = "Created a new Patient (Medical Record Number = 202410000003, Name = Carla Ferreira, Email = patientC@hospital.com, PhoneNumber = 910555333)",
                            ObjectType = "Patient"
                        });
                });

            modelBuilder.Entity("DDDSample1.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("operationTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("patientId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("priority")
                        .HasColumnType("longtext");

                    b.Property<int>("requestStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("staffId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("operationTypeId");

                    b.HasIndex("patientId");

                    b.HasIndex("staffId");

                    b.ToTable("OperationRequest", "projeto5sem");
                });

            modelBuilder.Entity("DDDSample1.Domain.OperationTypes.OperationType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("anaesthesiaTime")
                        .HasColumnType("int");

                    b.Property<int?>("cleaningTime")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int?>("surgeryTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OperationType", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2f518e6-8c3d-4b87-ae1f-9bfa79821ce2"),
                            Status = "ACTIVE",
                            name = "ACL Reconstruction"
                        },
                        new
                        {
                            Id = new Guid("20b784ab-b27c-4a87-a89e-57f554763bb6"),
                            Status = "ACTIVE",
                            name = "Knee Replacement"
                        },
                        new
                        {
                            Id = new Guid("689c2c73-d5ce-4081-a849-95facc292b1d"),
                            Status = "ACTIVE",
                            name = "Shoulder Replacement"
                        },
                        new
                        {
                            Id = new Guid("f5e336b0-6f63-4995-984e-4d393d749b94"),
                            Status = "ACTIVE",
                            name = "Hip Replacement"
                        },
                        new
                        {
                            Id = new Guid("3bb5d1fb-93ac-4074-957c-0bbee1f73150"),
                            Status = "ACTIVE",
                            name = "Meniscal Injury Treatment"
                        });
                });

            modelBuilder.Entity("DDDSample1.Domain.Patients.Allergy", b =>
                {
                    b.Property<Guid>("allergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("allergyName")
                        .HasColumnType("longtext");

                    b.HasKey("allergyId");

                    b.HasIndex("PatientId");

                    b.ToTable("Allergy");
                });

            modelBuilder.Entity("DDDSample1.Domain.Patients.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MedicalRecordNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MedicalRecordNumber")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Patient", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "1d1fa1d9-e26b-47ef-9fbb-f75232c4211e",
                            DateOfBirth = new DateOnly(2001, 10, 21),
                            Email = "patientA@hospital.com",
                            FullName = "João Camião",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000001",
                            PhoneNumber = "910555111"
                        },
                        new
                        {
                            Id = "aab2c519-b272-48a0-a9d4-d35fecc52613",
                            DateOfBirth = new DateOnly(1998, 5, 14),
                            Email = "patientB@hospital.com",
                            FullName = "Bruno Silva",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000002",
                            PhoneNumber = "910555222"
                        },
                        new
                        {
                            Id = "71d869cc-0fa2-4312-bc77-595d01ea8aa9",
                            DateOfBirth = new DateOnly(1995, 12, 30),
                            Email = "patientC@hospital.com",
                            FullName = "Carla Ferreira",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000003",
                            PhoneNumber = "910555333"
                        });
                });

            modelBuilder.Entity("DDDSample1.Domain.Staffs.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("staffRole")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Staff", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa0227cd-7448-497a-aa5a-295bf3042580"),
                            staffRole = "Admin"
                        },
                        new
                        {
                            Id = new Guid("f573d04e-3355-4d7e-9a69-444682a1677f"),
                            staffRole = "Doctor"
                        },
                        new
                        {
                            Id = new Guid("02026a3f-dce3-4671-ba6f-5d8dd99543dc"),
                            staffRole = "Doctor"
                        },
                        new
                        {
                            Id = new Guid("c3b585bc-8690-4330-8688-b547b6d1c204"),
                            staffRole = "Nurse"
                        },
                        new
                        {
                            Id = new Guid("6fc18ea5-4999-4dd8-b719-e5e39e336c2d"),
                            staffRole = "Nurse"
                        });
                });

            modelBuilder.Entity("DDDSample1.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.HasOne("DDDSample1.Domain.OperationTypes.OperationType", "operationType")
                        .WithMany("OperationRequests")
                        .HasForeignKey("operationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDSample1.Domain.Patients.Patient", "patient")
                        .WithMany("OperationRequests")
                        .HasForeignKey("patientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDSample1.Domain.Staffs.Staff", "staff")
                        .WithMany("OperationRequests")
                        .HasForeignKey("staffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("operationType");

                    b.Navigation("patient");

                    b.Navigation("staff");
                });

            modelBuilder.Entity("DDDSample1.Domain.Patients.Allergy", b =>
                {
                    b.HasOne("DDDSample1.Domain.Patients.Patient", null)
                        .WithMany("Allergies")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DDDSample1.Domain.OperationTypes.OperationType", b =>
                {
                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("DDDSample1.Domain.Patients.Patient", b =>
                {
                    b.Navigation("Allergies");

                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("DDDSample1.Domain.Staffs.Staff", b =>
                {
                    b.Navigation("OperationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
