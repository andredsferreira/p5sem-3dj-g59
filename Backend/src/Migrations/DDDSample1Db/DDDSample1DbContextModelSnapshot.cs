// <auto-generated />
using System;
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDNetCore.Migrations.DDDSample1Db
{
    [DbContext(typeof(DDDSample1DbContext))]
    partial class DDDSample1DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DDDSample1.Domain.DomainLogs.DomainLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DomainLog", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "8845ecaf-2366-4783-894e-7188b0fec4cf",
                            ActionType = "Creation",
                            Message = "Created a new Patient (Medical Record Number = 202410000001, Name = João Camião, Email = patientA@hospital.com, PhoneNumber = 910555111)",
                            ObjectType = "Patient"
                        },
                        new
                        {
                            Id = "01c421f2-080e-4063-93d4-b8ccba033721",
                            ActionType = "Creation",
                            Message = "Created a new Patient (Medical Record Number = 202410000002, Name = Bruno Silva, Email = patientB@hospital.com, PhoneNumber = 910555222)",
                            ObjectType = "Patient"
                        },
                        new
                        {
                            Id = "e57131c0-828e-4c8b-b5e2-e39a8f059cf2",
                            ActionType = "Creation",
                            Message = "Created a new Patient (Medical Record Number = 202410000003, Name = Carla Ferreira, Email = patientC@hospital.com, PhoneNumber = 910555333)",
                            ObjectType = "Patient"
                        });
                });

            modelBuilder.Entity("DDDSample1.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("operationTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("patientId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("priority")
                        .HasColumnType("longtext");

                    b.Property<int>("requestStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("staffId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("operationTypeId");

                    b.HasIndex("patientId");

                    b.HasIndex("staffId");

                    b.ToTable("OperationRequest", "projeto5sem");
                });

            modelBuilder.Entity("DDDSample1.Domain.OperationTypes.OperationType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("anaesthesiaTime")
                        .HasColumnType("int");

                    b.Property<int?>("cleaningTime")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int?>("surgeryTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OperationType", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0aef877-cbb6-4e1d-9635-a644c3fa61db"),
                            Status = "ACTIVE",
                            name = "ACL Reconstruction"
                        },
                        new
                        {
                            Id = new Guid("24d6d7e7-8f34-4262-8a44-38737aff426a"),
                            Status = "ACTIVE",
                            name = "Knee Replacement"
                        },
                        new
                        {
                            Id = new Guid("378582f1-37fd-45c9-ae73-2461fdf9d40f"),
                            Status = "ACTIVE",
                            name = "Shoulder Replacement"
                        },
                        new
                        {
                            Id = new Guid("8c62187e-4fb3-4e50-a0bb-028776cbb5ec"),
                            Status = "ACTIVE",
                            name = "Hip Replacement"
                        },
                        new
                        {
                            Id = new Guid("677d1dc1-4075-4e2a-8b49-3e9c77aa71ec"),
                            Status = "ACTIVE",
                            name = "Meniscal Injury Treatment"
                        });
                });

            modelBuilder.Entity("DDDSample1.Domain.Patients.Allergy", b =>
                {
                    b.Property<Guid>("allergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("allergyName")
                        .HasColumnType("longtext");

                    b.HasKey("allergyId");

                    b.HasIndex("PatientId");

                    b.ToTable("Allergy");
                });

            modelBuilder.Entity("DDDSample1.Domain.Patients.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MedicalRecordNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MedicalRecordNumber")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Patient", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "0adf9a6d-2613-4ce3-b865-9dd4d08ad719",
                            DateOfBirth = new DateOnly(2001, 10, 21),
                            Email = "patientA@hospital.com",
                            FullName = "João Camião",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000001",
                            PhoneNumber = "910555111"
                        },
                        new
                        {
                            Id = "66527a3d-2bc1-4d6c-8520-a32f94eab400",
                            DateOfBirth = new DateOnly(1998, 5, 14),
                            Email = "patientB@hospital.com",
                            FullName = "Bruno Silva",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000002",
                            PhoneNumber = "910555222"
                        },
                        new
                        {
                            Id = "63817f5b-bc96-4cf7-9d3f-cb4865793209",
                            DateOfBirth = new DateOnly(1995, 12, 30),
                            Email = "patientC@hospital.com",
                            FullName = "Carla Ferreira",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000003",
                            PhoneNumber = "910555333"
                        });
                });

            modelBuilder.Entity("DDDSample1.Domain.Staffs.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("staffRole")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Staff", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e22257ac-9ef3-4ff0-8eb1-fc68e43e1d9a"),
                            staffRole = "Admin"
                        },
                        new
                        {
                            Id = new Guid("02cdbef3-8fef-493e-bc89-5a6c6af83baa"),
                            staffRole = "Doctor"
                        },
                        new
                        {
                            Id = new Guid("5524ea06-4ff4-4373-aa45-431f2b622af6"),
                            staffRole = "Doctor"
                        },
                        new
                        {
                            Id = new Guid("9164e2f7-545c-45b0-9c24-dd7b3c72a015"),
                            staffRole = "Nurse"
                        },
                        new
                        {
                            Id = new Guid("eed5761b-f263-4899-a7ce-de71a6735832"),
                            staffRole = "Nurse"
                        });
                });

            modelBuilder.Entity("DDDSample1.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.HasOne("DDDSample1.Domain.OperationTypes.OperationType", "operationType")
                        .WithMany("OperationRequests")
                        .HasForeignKey("operationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDSample1.Domain.Patients.Patient", "patient")
                        .WithMany("OperationRequests")
                        .HasForeignKey("patientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDSample1.Domain.Staffs.Staff", "staff")
                        .WithMany("OperationRequests")
                        .HasForeignKey("staffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("operationType");

                    b.Navigation("patient");

                    b.Navigation("staff");
                });

            modelBuilder.Entity("DDDSample1.Domain.Patients.Allergy", b =>
                {
                    b.HasOne("DDDSample1.Domain.Patients.Patient", null)
                        .WithMany("Allergies")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DDDSample1.Domain.OperationTypes.OperationType", b =>
                {
                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("DDDSample1.Domain.Patients.Patient", b =>
                {
                    b.Navigation("Allergies");

                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("DDDSample1.Domain.Staffs.Staff", b =>
                {
                    b.Navigation("OperationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
