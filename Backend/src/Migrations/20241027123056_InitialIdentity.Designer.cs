// <auto-generated />
using System;
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(IdentityContext))]
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
    [Migration("20241027124120_InitialIdentity")]
========
    [Migration("20241027123056_InitialIdentity")]
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
    partial class InitialIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "b403fc49-6dd0-4b8e-8581-34de776cf50f",
========
                            Id = "41383035-7525-4b7e-aad1-2587242df310",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "1b7d12d1-fc51-480b-b967-0ea735c59b0d",
========
                            Id = "8041e28d-37b3-4bd4-be4b-d0cc68305c8e",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Name = "Doctor",
                            NormalizedName = "DOCTOR"
                        },
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "3995d494-55d6-4f4c-ba19-7ae318fd2a71",
========
                            Id = "ed981cbd-958e-4e13-809b-ccd18f325081",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Name = "Nurse",
                            NormalizedName = "NURSE"
                        },
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "720e7751-1b25-4373-af14-e1a3840c4602",
========
                            Id = "ecd40bce-116d-48d0-9220-ed2a67d6469b",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Name = "Technician",
                            NormalizedName = "TECHNICIAN"
                        },
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "11354b95-f5da-4b49-8aa6-01298a36eeda",
========
                            Id = "296eff06-0d15-45e3-8393-353cf539fc9b",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Name = "Patient",
                            NormalizedName = "PATIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "96c7ab22-cfbc-4a6f-a6aa-23254e9898c4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cc62a30f-df71-46be-ae62-98a43ab5cb4f",
========
                            Id = "3ee2d631-09f1-4b46-bc6b-87a79b6da5b4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ed589ad6-13b6-4138-bbba-4883e0f4d689",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Email = "admin@hospital.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@HOSPITAL.COM",
                            NormalizedUserName = "ADMIN",
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAEDizXXzlknuPK6Ex7jZ1A6nZEJNZrXNWFkPMoNP3sdQC2JMnDxyr93tpTj2X60YrDA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "23cc3ce3-d9c9-43e8-8446-e1d536011369",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEFERiNrgdzMLW7AwlfA6w7mTpXAXpZDg33SPKvf33WS3deiIFTjbpXz+daIkjGEB5g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f693aa6d-0426-4210-ae00-94241f49ee3a",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "2edc30dd-2faf-44b7-9fba-2bc499b1caab",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e6efdfd-cf3b-4142-97bf-878a26345026",
========
                            Id = "058a1238-c071-41bf-9cc8-a8d28711752d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bccc5312-08fe-4086-8a9e-82e14fcd381b",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Email = "doctor@hospital.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "DOCTOR@HOSPITAL.COM",
                            NormalizedUserName = "DOCTOR",
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAEE2bU5EuaaJ0at4XSKn3ZiGGUguzpxcZnLn5YNtAwZtD/NDqTDiSs56xooIXjTYG1Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c20e0f37-87b0-4ac6-befe-1dd8872a3d5a",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEN0oWXYd1H7j0zlvI+XL5NW5nhk/8/kkSjmwzWxAWhVa2G8HloyoMmmT7BVWDnKMPw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0c0f112d-f9b0-4eac-8da6-50761f48cb9c",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "doctor"
                        },
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "400a776e-a6ab-4f05-9f7b-747a48f53b13",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e8bd675e-f461-46e6-8887-96a2e812fb4e",
========
                            Id = "4bf25d5d-41f4-4816-aef4-d8d23ca8415d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0cfbc430-c2ff-43ee-a404-6576759a9c68",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Email = "nurse@hospital.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "NURSE@HOSPITAL.COM",
                            NormalizedUserName = "NURSE",
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAED1TF/X99gWFbOhso1SWjeWIg72Do6OBGButghHWS52N1TdodwWKBPJwPJf2HYEkVQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0aea72b6-ca5f-42df-b6cb-85e19fb878e4",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEH4/EkEggIWkRXe+o5QUDSVhu9wy67Qvaha1UfI7HnkPEN5ooold3yDPIf1Ye6jA3w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ae92c968-4d1b-43d3-883a-dcc2f3ce3f20",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "nurse"
                        },
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "81b7e5d1-3902-4024-974f-9e6c99f3c052",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "44e3d210-4d2b-4612-a694-f0ae234afce4",
========
                            Id = "7bbd586e-2339-4eb6-a0c2-97aac9df9053",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a2fc7210-bff4-4d64-8f41-2ba886afbde2",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Email = "technician@hospital.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TECHNICIAN@HOSPITAL.COM",
                            NormalizedUserName = "TECHNICIAN",
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAELqI2zz0EzCbR4TWpmWBbzBgzZxTBdSkeTZ1Tok7HGOUAdS6A+MvLUti4paGg5ZafQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b1b90108-ae1d-414f-8005-0b573e789915",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEELXAypMgDdFBt296lXm8Iy3iw5Vl8CCfORWNlZfaw5soYDbMVK1Fr3x/vsv+Kgg7A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0d994cec-ba4c-42de-aa94-73873bf478e2",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "technician"
                        },
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            Id = "9b7ecd5e-b88a-4131-8ed4-f8915b16b44b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d55c8675-d659-4e45-86ac-89a925da3567",
========
                            Id = "12b413aa-cf9b-4d4d-b16b-1ee4bead2b91",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ec77e5ff-d250-4b10-b996-0d8e94bd95b9",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            Email = "patient@hospital.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PATIENT@HOSPITAL.COM",
                            NormalizedUserName = "PATIENT",
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAEB1dR9hO9NKaEovLz1vCTTaOYrS9aL/9CutVN70eAzistiAzqCUSac37sECWACKOjw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c7ce1fb5-7d80-4c55-92fc-93e174c0862a",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEDcXWEYrjaaHlBL+2caSh4WIF+n4zMY6lBUrqjRWTsojhq4NBUvFBVaIYxxfGDgD0Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "00e1192f-928e-4fd0-8309-a3500ffa3079",
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                            TwoFactorEnabled = false,
                            UserName = "patient"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:Backend/src/Migrations/20241027124120_InitialIdentity.Designer.cs
                            UserId = "96c7ab22-cfbc-4a6f-a6aa-23254e9898c4",
                            RoleId = "b403fc49-6dd0-4b8e-8581-34de776cf50f"
                        },
                        new
                        {
                            UserId = "2edc30dd-2faf-44b7-9fba-2bc499b1caab",
                            RoleId = "1b7d12d1-fc51-480b-b967-0ea735c59b0d"
                        },
                        new
                        {
                            UserId = "400a776e-a6ab-4f05-9f7b-747a48f53b13",
                            RoleId = "3995d494-55d6-4f4c-ba19-7ae318fd2a71"
                        },
                        new
                        {
                            UserId = "81b7e5d1-3902-4024-974f-9e6c99f3c052",
                            RoleId = "720e7751-1b25-4373-af14-e1a3840c4602"
                        },
                        new
                        {
                            UserId = "9b7ecd5e-b88a-4131-8ed4-f8915b16b44b",
                            RoleId = "11354b95-f5da-4b49-8aa6-01298a36eeda"
========
                            UserId = "3ee2d631-09f1-4b46-bc6b-87a79b6da5b4",
                            RoleId = "41383035-7525-4b7e-aad1-2587242df310"
                        },
                        new
                        {
                            UserId = "058a1238-c071-41bf-9cc8-a8d28711752d",
                            RoleId = "8041e28d-37b3-4bd4-be4b-d0cc68305c8e"
                        },
                        new
                        {
                            UserId = "4bf25d5d-41f4-4816-aef4-d8d23ca8415d",
                            RoleId = "ed981cbd-958e-4e13-809b-ccd18f325081"
                        },
                        new
                        {
                            UserId = "7bbd586e-2339-4eb6-a0c2-97aac9df9053",
                            RoleId = "ecd40bce-116d-48d0-9220-ed2a67d6469b"
                        },
                        new
                        {
                            UserId = "12b413aa-cf9b-4d4d-b16b-1ee4bead2b91",
                            RoleId = "296eff06-0d15-45e3-8393-353cf539fc9b"
>>>>>>>> af32e17 (Save before):Backend/src/Migrations/20241027123056_InitialIdentity.Designer.cs
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
