// <auto-generated />
using System;
using Backend.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250102175305_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Backend.Domain.Appointments.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("AppointmentStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DateTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("OperationRequestId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SurgeryRoomId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("OperationRequestId");

                    b.HasIndex("SurgeryRoomId");

                    b.ToTable("Appointment", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2649aee7-7d75-428d-909a-4463c4d23cc7"),
                            AppointmentStatus = "Scheduled",
                            DateTime = "28/10/2024 10:30:00",
                            OperationRequestId = new Guid("cae569af-afe9-404d-9da1-76b84eecce7f"),
                            SurgeryRoomId = "cff0b0a9-ef67-449f-a8cd-dbe352fc72b3"
                        },
                        new
                        {
                            Id = new Guid("311ec4fa-cae9-45e1-8b5f-a1ae24ae6019"),
                            AppointmentStatus = "Scheduled",
                            DateTime = "28/10/2024 18:30:00",
                            OperationRequestId = new Guid("48dd1dd2-e7ff-435c-b943-84e9eba68dfc"),
                            SurgeryRoomId = "838b2a4c-bc7b-433e-9cd9-c948c2304510"
                        });
                });

            modelBuilder.Entity("Backend.Domain.DomainLogs.DomainLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DomainLog", "projeto5sem");
                });

            modelBuilder.Entity("Backend.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("operationTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("patientId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("priority")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("requestStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("staffId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("operationTypeId");

                    b.HasIndex("patientId");

                    b.HasIndex("staffId");

                    b.ToTable("OperationRequest", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cae569af-afe9-404d-9da1-76b84eecce7f"),
                            dateTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("f0341388-9655-465e-ab81-879b176e3c66"),
                            patientId = "68aff3df-5eb4-4c9b-8b9b-21d40994b9c3",
                            priority = "Elective",
                            requestStatus = "Pending",
                            staffId = "9f2e2449-b161-43d8-bf7b-4a6f88fd45bc"
                        },
                        new
                        {
                            Id = new Guid("48dd1dd2-e7ff-435c-b943-84e9eba68dfc"),
                            dateTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("aece0fc2-d4c6-4032-b2a8-e57c7f199ab7"),
                            patientId = "890fc03a-5365-4541-aca8-02cd4a5b48c2",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "9f2e2449-b161-43d8-bf7b-4a6f88fd45bc"
                        },
                        new
                        {
                            Id = new Guid("ef53d7c2-00cf-4ef5-b311-09cd76222339"),
                            dateTime = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("8dd68b42-a1ab-47b3-9922-a7d710d47158"),
                            patientId = "d3a159c6-d82e-4862-bc11-536201f5ee2d",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "9f2e2449-b161-43d8-bf7b-4a6f88fd45bc"
                        },
                        new
                        {
                            Id = new Guid("e756311d-236f-4bd4-992d-cea4ee623db8"),
                            dateTime = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("00ef1f89-1dd4-4c24-b1cb-1039a5c72d31"),
                            patientId = "6136c455-52f4-4f90-921c-5c2cb98c28ed",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "9f2e2449-b161-43d8-bf7b-4a6f88fd45bc"
                        },
                        new
                        {
                            Id = new Guid("6765e71e-a465-4e9a-85c5-099c7f6cde26"),
                            dateTime = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("547aefa3-7b4d-4b46-ac7b-6a9f59e01583"),
                            patientId = "0b418a6e-10ac-473e-a68b-3e06a2f21d38",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "9f2e2449-b161-43d8-bf7b-4a6f88fd45bc"
                        },
                        new
                        {
                            Id = new Guid("5fabaa99-0080-4d16-ae36-e7b5d819daf9"),
                            dateTime = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("be4fb15b-0fd5-4bec-adf6-0e9501f23637"),
                            patientId = "db93a935-d3a1-458a-8c9e-98e44e76633a",
                            priority = "Elective",
                            requestStatus = "Pending",
                            staffId = "9f2e2449-b161-43d8-bf7b-4a6f88fd45bc"
                        },
                        new
                        {
                            Id = new Guid("5dc1d731-fd8e-4085-88a5-46cbc088d65f"),
                            dateTime = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("547aefa3-7b4d-4b46-ac7b-6a9f59e01583"),
                            patientId = "d45acb35-43c8-4f57-818d-b4f3d17e0bdc",
                            priority = "Elective",
                            requestStatus = "Pending",
                            staffId = "5ffb9ab8-694d-448f-90b5-d2cb2d561eab"
                        },
                        new
                        {
                            Id = new Guid("49f5ac2c-2dc0-47f4-bd73-68c2737586ec"),
                            dateTime = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("19cf8f06-7506-4751-b0db-1682378ffe1b"),
                            patientId = "db93a935-d3a1-458a-8c9e-98e44e76633a",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "5ffb9ab8-694d-448f-90b5-d2cb2d561eab"
                        },
                        new
                        {
                            Id = new Guid("2fdc86c8-120a-4bb0-958f-a1694f77f510"),
                            dateTime = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("be4fb15b-0fd5-4bec-adf6-0e9501f23637"),
                            patientId = "4c6eab25-6148-4e42-b192-6fe29355c401",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "5ffb9ab8-694d-448f-90b5-d2cb2d561eab"
                        },
                        new
                        {
                            Id = new Guid("19c03335-f7bd-405c-a409-33d60b2169f1"),
                            dateTime = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("e1c1f276-724d-4f34-8c3b-4de560fc346b"),
                            patientId = "50e865c8-39cf-4b59-a50c-236a27dffd70",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "5ffb9ab8-694d-448f-90b5-d2cb2d561eab"
                        },
                        new
                        {
                            Id = new Guid("1a944ac7-1fcc-42cf-9c1f-d6bff3de8ff7"),
                            dateTime = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("47db2f8f-adff-4257-9df4-3a8debfcca10"),
                            patientId = "40ab9b22-0d93-457b-b8b9-50e4b55651a6",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "5ffb9ab8-694d-448f-90b5-d2cb2d561eab"
                        },
                        new
                        {
                            Id = new Guid("eb9c4c9b-dbf7-4080-855b-d47775a144ab"),
                            dateTime = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("47db2f8f-adff-4257-9df4-3a8debfcca10"),
                            patientId = "40ab9b22-0d93-457b-b8b9-50e4b55651a6",
                            priority = "Elective",
                            requestStatus = "Pending",
                            staffId = "9618f55d-45fb-458a-88e5-e74f854b5491"
                        },
                        new
                        {
                            Id = new Guid("4f7668dc-c233-407e-8531-e88e47a233ce"),
                            dateTime = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("d7ea178a-0db9-435b-bbe9-c679fdb518e8"),
                            patientId = "efe8c432-d3db-4cb5-8611-19e70128d018",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "9618f55d-45fb-458a-88e5-e74f854b5491"
                        },
                        new
                        {
                            Id = new Guid("a832894e-c8d0-43d1-9b12-f61d881ecd38"),
                            dateTime = new DateTime(2025, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("f0341388-9655-465e-ab81-879b176e3c66"),
                            patientId = "616c9166-395e-428a-ac69-7c3c35e3fd7b",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "9618f55d-45fb-458a-88e5-e74f854b5491"
                        },
                        new
                        {
                            Id = new Guid("48705119-475d-4d2a-9d6d-bb2f88de0820"),
                            dateTime = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("aece0fc2-d4c6-4032-b2a8-e57c7f199ab7"),
                            patientId = "791c4458-b797-4557-a9fc-44f4a9607a57",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "9618f55d-45fb-458a-88e5-e74f854b5491"
                        },
                        new
                        {
                            Id = new Guid("08f42fef-d35b-4669-92b0-96471413415c"),
                            dateTime = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("8dd68b42-a1ab-47b3-9922-a7d710d47158"),
                            patientId = "0b418a6e-10ac-473e-a68b-3e06a2f21d38",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "9618f55d-45fb-458a-88e5-e74f854b5491"
                        },
                        new
                        {
                            Id = new Guid("a577f9ab-79cf-48b6-8399-3a5805be42bc"),
                            dateTime = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("00ef1f89-1dd4-4c24-b1cb-1039a5c72d31"),
                            patientId = "68aff3df-5eb4-4c9b-8b9b-21d40994b9c3",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "9618f55d-45fb-458a-88e5-e74f854b5491"
                        });
                });

            modelBuilder.Entity("Backend.Domain.OperationTypes.OperationType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<int>("MinAnesthetist")
                        .HasColumnType("int");

                    b.Property<int>("MinCirculatingNurse")
                        .HasColumnType("int");

                    b.Property<int>("MinDoctor")
                        .HasColumnType("int");

                    b.Property<int>("MinInstrumentingNurse")
                        .HasColumnType("int");

                    b.Property<int>("MinMedicalActionAssistant")
                        .HasColumnType("int");

                    b.Property<int>("MinNurseAnaesthetist")
                        .HasColumnType("int");

                    b.Property<int>("MinXRayTechnician")
                        .HasColumnType("int");

                    b.Property<Guid?>("SpecializationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("anaesthesiaTime")
                        .HasColumnType("int");

                    b.Property<int?>("cleaningTime")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("surgeryTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("OperationType", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0341388-9655-465e-ab81-879b176e3c66"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 30,
                            name = "ACL reconstruction",
                            surgeryTime = 60
                        },
                        new
                        {
                            Id = new Guid("aece0fc2-d4c6-4032-b2a8-e57c7f199ab7"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 45,
                            name = "Knee replacement",
                            surgeryTime = 60
                        },
                        new
                        {
                            Id = new Guid("8dd68b42-a1ab-47b3-9922-a7d710d47158"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 45,
                            name = "Shoulder replacement",
                            surgeryTime = 90
                        },
                        new
                        {
                            Id = new Guid("00ef1f89-1dd4-4c24-b1cb-1039a5c72d31"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 45,
                            name = "Hip replacement",
                            surgeryTime = 75
                        },
                        new
                        {
                            Id = new Guid("547aefa3-7b4d-4b46-ac7b-6a9f59e01583"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 20,
                            name = "Meniscal inury treatment",
                            surgeryTime = 45
                        },
                        new
                        {
                            Id = new Guid("19cf8f06-7506-4751-b0db-1682378ffe1b"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 30,
                            name = "Rotator cuff repair",
                            surgeryTime = 80
                        },
                        new
                        {
                            Id = new Guid("be4fb15b-0fd5-4bec-adf6-0e9501f23637"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 30,
                            cleaningTime = 20,
                            name = "Ankle ligaments repair",
                            surgeryTime = 45
                        },
                        new
                        {
                            Id = new Guid("e1c1f276-724d-4f34-8c3b-4de560fc346b"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 20,
                            cleaningTime = 15,
                            name = "Lumbar disectomy",
                            surgeryTime = 45
                        },
                        new
                        {
                            Id = new Guid("47db2f8f-adff-4257-9df4-3a8debfcca10"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 15,
                            cleaningTime = 15,
                            name = "Trigger finger",
                            surgeryTime = 10
                        },
                        new
                        {
                            Id = new Guid("d7ea178a-0db9-435b-bbe9-c679fdb518e8"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 15,
                            cleaningTime = 15,
                            name = "Carpal tunnel syndrome",
                            surgeryTime = 10
                        });
                });

            modelBuilder.Entity("Backend.Domain.Patients.Allergy", b =>
                {
                    b.Property<Guid>("allergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("allergyName")
                        .HasColumnType("longtext");

                    b.HasKey("allergyId");

                    b.HasIndex("PatientId");

                    b.ToTable("Allergy");
                });

            modelBuilder.Entity("Backend.Domain.Patients.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MedicalRecordNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MedicalRecordNumber")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("UserEmail")
                        .IsUnique();

                    b.ToTable("Patient", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "68aff3df-5eb4-4c9b-8b9b-21d40994b9c3",
                            DateOfBirth = new DateOnly(2001, 10, 21),
                            Email = "patientA@hospital.com",
                            FullName = "João Camião",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000001",
                            PhoneNumber = "910555111",
                            UserEmail = "patientA@hospital.com"
                        },
                        new
                        {
                            Id = "890fc03a-5365-4541-aca8-02cd4a5b48c2",
                            DateOfBirth = new DateOnly(1998, 5, 14),
                            Email = "patientB@hospital.com",
                            FullName = "Bruno Silva",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000002",
                            PhoneNumber = "910555222",
                            UserEmail = "patientB@hospital.com"
                        },
                        new
                        {
                            Id = "d3a159c6-d82e-4862-bc11-536201f5ee2d",
                            DateOfBirth = new DateOnly(1995, 12, 30),
                            Email = "patientC@hospital.com",
                            FullName = "Carla Ferreira",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000003",
                            PhoneNumber = "910555333",
                            UserEmail = "patientC@hospital.com"
                        },
                        new
                        {
                            Id = "6136c455-52f4-4f90-921c-5c2cb98c28ed",
                            DateOfBirth = new DateOnly(1988, 5, 14),
                            Email = "patientD@hospital.com",
                            FullName = "David Oliveira",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000004",
                            PhoneNumber = "910555334",
                            UserEmail = "patientD@hospital.com"
                        },
                        new
                        {
                            Id = "d45acb35-43c8-4f57-818d-b4f3d17e0bdc",
                            DateOfBirth = new DateOnly(1992, 8, 22),
                            Email = "patientE@hospital.com",
                            FullName = "Emma Sousa",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000005",
                            PhoneNumber = "910555335",
                            UserEmail = "patientE@hospital.com"
                        },
                        new
                        {
                            Id = "db93a935-d3a1-458a-8c9e-98e44e76633a",
                            DateOfBirth = new DateOnly(1985, 3, 10),
                            Email = "patientF@hospital.com",
                            FullName = "Felipe Costa",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000006",
                            PhoneNumber = "910555336",
                            UserEmail = "patientF@hospital.com"
                        },
                        new
                        {
                            Id = "4c6eab25-6148-4e42-b192-6fe29355c401",
                            DateOfBirth = new DateOnly(2000, 11, 2),
                            Email = "patientG@hospital.com",
                            FullName = "Gabriela Santos",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000007",
                            PhoneNumber = "910555337",
                            UserEmail = "patientG@hospital.com"
                        },
                        new
                        {
                            Id = "50e865c8-39cf-4b59-a50c-236a27dffd70",
                            DateOfBirth = new DateOnly(1990, 7, 19),
                            Email = "patientH@hospital.com",
                            FullName = "Henrique Almeida",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000008",
                            PhoneNumber = "910555338",
                            UserEmail = "patientH@hospital.com"
                        },
                        new
                        {
                            Id = "40ab9b22-0d93-457b-b8b9-50e4b55651a6",
                            DateOfBirth = new DateOnly(1994, 1, 15),
                            Email = "patientI@hospital.com",
                            FullName = "Isabel Pereira",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000009",
                            PhoneNumber = "910555339",
                            UserEmail = "patientI@hospital.com"
                        },
                        new
                        {
                            Id = "efe8c432-d3db-4cb5-8611-19e70128d018",
                            DateOfBirth = new DateOnly(1982, 6, 8),
                            Email = "patientJ@hospital.com",
                            FullName = "João Lima",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000010",
                            PhoneNumber = "910555340",
                            UserEmail = "patientJ@hospital.com"
                        },
                        new
                        {
                            Id = "616c9166-395e-428a-ac69-7c3c35e3fd7b",
                            DateOfBirth = new DateOnly(1996, 9, 25),
                            Email = "patientK@hospital.com",
                            FullName = "Karina Martins",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000011",
                            PhoneNumber = "910555341",
                            UserEmail = "patientK@hospital.com"
                        },
                        new
                        {
                            Id = "791c4458-b797-4557-a9fc-44f4a9607a57",
                            DateOfBirth = new DateOnly(1987, 4, 12),
                            Email = "patientL@hospital.com",
                            FullName = "Lucas Rodrigues",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000012",
                            PhoneNumber = "910555342",
                            UserEmail = "patientL@hospital.com"
                        },
                        new
                        {
                            Id = "0b418a6e-10ac-473e-a68b-3e06a2f21d38",
                            DateOfBirth = new DateOnly(1993, 12, 5),
                            Email = "patientM@hospital.com",
                            FullName = "Marta Silva",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000013",
                            PhoneNumber = "910555343",
                            UserEmail = "patientM@hospital.com"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Specializations.Specialization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("codeSpec")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("designation")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("codeSpec")
                        .IsUnique();

                    b.HasIndex("designation")
                        .IsUnique();

                    b.ToTable("Specialization", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ba12613-98de-40f4-bdc0-40c5e1d24209"),
                            codeSpec = "PRO",
                            description = "Prosthetics",
                            designation = "Prosthethiscs"
                        },
                        new
                        {
                            Id = new Guid("c969e14e-ad11-4c3a-88fc-b90351e74cef"),
                            codeSpec = "ART",
                            description = "Arthroscopy",
                            designation = "Arthroscopy"
                        },
                        new
                        {
                            Id = new Guid("7172b437-5a79-4953-9b51-180a0452ee47"),
                            codeSpec = "SPN",
                            description = "Spine",
                            designation = "Spine"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Staffs.Staff", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("IdentityUsername")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("StaffRole")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LicenseNumber")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Staff", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "9f2e2449-b161-43d8-bf7b-4a6f88fd45bc",
                            Email = "pedro@hospital.com",
                            FullName = "Pedro Carvalho Oliveira Monteiro",
                            IdentityUsername = "pedro",
                            LicenseNumber = "f47ac10b-08cc-4372-a507-0e02b2d3d479",
                            PhoneNumber = "910555111",
                            StaffRole = "doctor"
                        },
                        new
                        {
                            Id = "5ffb9ab8-694d-448f-90b5-d2cb2d561eab",
                            Email = "andre@hospital.com",
                            FullName = "André de Sousa Ferreira",
                            IdentityUsername = "andre",
                            LicenseNumber = "f47ac10b-58cc-4372-a567-0e02b2c3d479",
                            PhoneNumber = "920555222",
                            StaffRole = "doctor"
                        },
                        new
                        {
                            Id = "9618f55d-45fb-458a-88e5-e74f854b5491",
                            Email = "tiago@hospital.com",
                            FullName = "Tiago Filipe Carvalho Nunes",
                            IdentityUsername = "tiago",
                            LicenseNumber = "f57ac10b-68cc-5372-a567-1e02b2c3d479",
                            PhoneNumber = "930555333",
                            StaffRole = "doctor"
                        },
                        new
                        {
                            Id = "cb31ca5f-0452-4c12-9803-7788f1a01355",
                            Email = "nurse@hospital.com",
                            FullName = "Nurse One",
                            IdentityUsername = "nurse",
                            LicenseNumber = "n47ac10b-58cc-4372-a567-0e02b2c3d481",
                            PhoneNumber = "910555567",
                            StaffRole = "nurse"
                        });
                });

            modelBuilder.Entity("Backend.Domain.SurgeryRooms.SurgeryRoom", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AssignedEquipment")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("MaintenanceSlots")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("RoomStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("SurgeryRoom", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "cff0b0a9-ef67-449f-a8cd-dbe352fc72b3",
                            AssignedEquipment = "[\"Scalpel\",\"Monitor\"]",
                            Capacity = 10,
                            MaintenanceSlots = "[\"28/10/2024=[09:30,10:00];\"]",
                            Number = 200,
                            RoomStatus = "Available",
                            RoomType = "OperatingRoom"
                        },
                        new
                        {
                            Id = "838b2a4c-bc7b-433e-9cd9-c948c2304510",
                            AssignedEquipment = "[\"Scalpel\",\"Monitor\",\"Table\"]",
                            Capacity = 10,
                            MaintenanceSlots = "[\"28/10/2024=[12:30,13:00];\"]",
                            Number = 201,
                            RoomStatus = "Available",
                            RoomType = "OperatingRoom"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Appointments.Appointment", b =>
                {
                    b.HasOne("Backend.Domain.OperationRequests.OperationRequest", "OperationRequest")
                        .WithMany("Appointments")
                        .HasForeignKey("OperationRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.SurgeryRooms.SurgeryRoom", "SurgeryRoom")
                        .WithMany("Appointments")
                        .HasForeignKey("SurgeryRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationRequest");

                    b.Navigation("SurgeryRoom");
                });

            modelBuilder.Entity("Backend.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.HasOne("Backend.Domain.OperationTypes.OperationType", "operationType")
                        .WithMany("OperationRequests")
                        .HasForeignKey("operationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.Patients.Patient", "patient")
                        .WithMany("OperationRequests")
                        .HasForeignKey("patientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.Staffs.Staff", "staff")
                        .WithMany("OperationRequests")
                        .HasForeignKey("staffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("operationType");

                    b.Navigation("patient");

                    b.Navigation("staff");
                });

            modelBuilder.Entity("Backend.Domain.OperationTypes.OperationType", b =>
                {
                    b.HasOne("Backend.Domain.Specializations.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("Backend.Domain.Patients.Allergy", b =>
                {
                    b.HasOne("Backend.Domain.Patients.Patient", null)
                        .WithMany("Allergies")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Backend.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Backend.Domain.OperationTypes.OperationType", b =>
                {
                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("Backend.Domain.Patients.Patient", b =>
                {
                    b.Navigation("Allergies");

                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("Backend.Domain.Staffs.Staff", b =>
                {
                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("Backend.Domain.SurgeryRooms.SurgeryRoom", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
