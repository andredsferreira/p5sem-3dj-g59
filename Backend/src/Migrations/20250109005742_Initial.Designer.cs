// <auto-generated />
using System;
using Backend.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250109005742_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Backend.Domain.Appointments.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("AppointmentStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DateTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("OperationRequestId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SurgeryRoomId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("OperationRequestId");

                    b.HasIndex("SurgeryRoomId");

                    b.ToTable("Appointment", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33e4913e-f311-4d70-9239-43c0473e7a91"),
                            AppointmentStatus = "Scheduled",
                            DateTime = "28/10/2024 10:30:00",
                            OperationRequestId = new Guid("ab075cde-7feb-4532-a04f-53c3721bb280"),
                            SurgeryRoomId = "494736ae-6226-4bf3-80a4-a9d16eb3088d"
                        },
                        new
                        {
                            Id = new Guid("dfe809ce-c9a4-4979-ac3b-d57d33939d5d"),
                            AppointmentStatus = "Scheduled",
                            DateTime = "28/10/2024 18:30:00",
                            OperationRequestId = new Guid("73cd2013-c1df-4a7d-9377-476303f3bfb2"),
                            SurgeryRoomId = "128b6c00-2298-4283-a22e-1dd306128464"
                        });
                });

            modelBuilder.Entity("Backend.Domain.DomainLogs.DomainLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DomainLog", "projeto5sem");
                });

            modelBuilder.Entity("Backend.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("operationTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("patientId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("priority")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("requestStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("staffId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("operationTypeId");

                    b.HasIndex("patientId");

                    b.HasIndex("staffId");

                    b.ToTable("OperationRequest", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab075cde-7feb-4532-a04f-53c3721bb280"),
                            dateTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("490bd87e-09a9-47a6-93c0-3cc23c040487"),
                            patientId = "7dd3d356-aaaf-4fa2-91a5-ab612f9b9512",
                            priority = "Elective",
                            requestStatus = "Pending",
                            staffId = "50dfbfee-e1ce-4fe2-a93b-4e54d8d7d726"
                        },
                        new
                        {
                            Id = new Guid("73cd2013-c1df-4a7d-9377-476303f3bfb2"),
                            dateTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("c53367c3-88fc-4c7f-aad2-9d55add5f560"),
                            patientId = "df97308b-74fd-4461-accd-c6daaf70a410",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "50dfbfee-e1ce-4fe2-a93b-4e54d8d7d726"
                        },
                        new
                        {
                            Id = new Guid("45ab6785-77a3-4706-a00a-c098002cada7"),
                            dateTime = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("7568d7e7-c051-4fe0-9406-05eafc4d26ea"),
                            patientId = "dcaddc0c-c95c-4746-ac97-4e04c3f0862f",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "50dfbfee-e1ce-4fe2-a93b-4e54d8d7d726"
                        },
                        new
                        {
                            Id = new Guid("4ddc3c2c-4e5b-4a98-bd11-834746871f4d"),
                            dateTime = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("d318e3d0-cea0-4f9d-80b6-759628435998"),
                            patientId = "57e171b5-e294-4512-b272-0ac0cf826ad2",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "50dfbfee-e1ce-4fe2-a93b-4e54d8d7d726"
                        },
                        new
                        {
                            Id = new Guid("a9697fb1-dc2e-4209-8d6d-cc56a0310dc4"),
                            dateTime = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("3953d992-aa3a-482a-8da0-b7364776a783"),
                            patientId = "846d0d23-fd94-4fdb-9903-a13ee6629946",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "50dfbfee-e1ce-4fe2-a93b-4e54d8d7d726"
                        },
                        new
                        {
                            Id = new Guid("0ece32b5-8c27-47dd-a427-ea0bde0eeb53"),
                            dateTime = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("4c69349b-7bee-44d3-bcf3-7e52f551cbf0"),
                            patientId = "72f73b1c-74a6-4405-bb7b-93bf50f0cf6f",
                            priority = "Elective",
                            requestStatus = "Pending",
                            staffId = "50dfbfee-e1ce-4fe2-a93b-4e54d8d7d726"
                        },
                        new
                        {
                            Id = new Guid("1f697604-31fc-4067-a6a8-0d8da48eb410"),
                            dateTime = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("3953d992-aa3a-482a-8da0-b7364776a783"),
                            patientId = "ccff01c4-504c-4843-90a1-f1f672264305",
                            priority = "Elective",
                            requestStatus = "Pending",
                            staffId = "951d83dd-0e0e-4d3e-9c3d-ae972e71e682"
                        },
                        new
                        {
                            Id = new Guid("7119fc3a-8bb3-42c8-a594-8e80c90690ff"),
                            dateTime = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("07a7607e-7928-4b87-a7db-f47672e05e47"),
                            patientId = "72f73b1c-74a6-4405-bb7b-93bf50f0cf6f",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "951d83dd-0e0e-4d3e-9c3d-ae972e71e682"
                        },
                        new
                        {
                            Id = new Guid("bc226115-d0c4-4e95-b77e-3797664ef870"),
                            dateTime = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("4c69349b-7bee-44d3-bcf3-7e52f551cbf0"),
                            patientId = "e24567a6-07af-4a02-ab62-08d1bf8d20bb",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "951d83dd-0e0e-4d3e-9c3d-ae972e71e682"
                        },
                        new
                        {
                            Id = new Guid("8099d9d9-d83a-4a5a-a880-c7048a19fb0f"),
                            dateTime = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("001c35e0-c535-44ca-8dde-10dfcb30b9e4"),
                            patientId = "d47df3e1-c48d-4090-a083-793a4654ceea",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "951d83dd-0e0e-4d3e-9c3d-ae972e71e682"
                        },
                        new
                        {
                            Id = new Guid("424d80bf-8453-4735-bab5-1d704d5ae3f3"),
                            dateTime = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("bbb20be3-add1-4d3f-9a03-cc1f15ae7c2a"),
                            patientId = "3b0a2db5-97fa-4db0-b05c-5b58471d5965",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "951d83dd-0e0e-4d3e-9c3d-ae972e71e682"
                        },
                        new
                        {
                            Id = new Guid("8015bf49-39ff-4b8f-856a-5ce3b55d235e"),
                            dateTime = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("bbb20be3-add1-4d3f-9a03-cc1f15ae7c2a"),
                            patientId = "3b0a2db5-97fa-4db0-b05c-5b58471d5965",
                            priority = "Elective",
                            requestStatus = "Pending",
                            staffId = "dce5b8c2-29c0-4016-9bef-984f247f98e0"
                        },
                        new
                        {
                            Id = new Guid("aa513694-e6e1-407a-b7d0-026ab710a200"),
                            dateTime = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("4d4a71f2-22dd-4216-8422-268a8fb0f161"),
                            patientId = "bde37e08-62ed-4213-9ea5-42f4e9a392b3",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "dce5b8c2-29c0-4016-9bef-984f247f98e0"
                        },
                        new
                        {
                            Id = new Guid("282c1bd5-64e0-4872-8b1b-4f21bd7b0c8b"),
                            dateTime = new DateTime(2025, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("490bd87e-09a9-47a6-93c0-3cc23c040487"),
                            patientId = "05b33510-bbb7-4593-95f2-3c8c511d09f2",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "dce5b8c2-29c0-4016-9bef-984f247f98e0"
                        },
                        new
                        {
                            Id = new Guid("662f2476-1725-4989-af2f-7bdc7c263e38"),
                            dateTime = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("c53367c3-88fc-4c7f-aad2-9d55add5f560"),
                            patientId = "e56adecb-ec01-4b7b-a601-ed038bc9fcc1",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "dce5b8c2-29c0-4016-9bef-984f247f98e0"
                        },
                        new
                        {
                            Id = new Guid("8c1180ee-fda2-4efd-b1f1-5f353c70279c"),
                            dateTime = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("7568d7e7-c051-4fe0-9406-05eafc4d26ea"),
                            patientId = "846d0d23-fd94-4fdb-9903-a13ee6629946",
                            priority = "Urgent",
                            requestStatus = "Pending",
                            staffId = "dce5b8c2-29c0-4016-9bef-984f247f98e0"
                        },
                        new
                        {
                            Id = new Guid("515148e4-a70d-4f08-85d3-4891f1b51297"),
                            dateTime = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            operationTypeId = new Guid("d318e3d0-cea0-4f9d-80b6-759628435998"),
                            patientId = "7dd3d356-aaaf-4fa2-91a5-ab612f9b9512",
                            priority = "Emergency",
                            requestStatus = "Pending",
                            staffId = "dce5b8c2-29c0-4016-9bef-984f247f98e0"
                        });
                });

            modelBuilder.Entity("Backend.Domain.OperationTypes.OperationType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<int>("MinAnesthetist")
                        .HasColumnType("int");

                    b.Property<int>("MinCirculatingNurse")
                        .HasColumnType("int");

                    b.Property<int>("MinDoctor")
                        .HasColumnType("int");

                    b.Property<int>("MinInstrumentingNurse")
                        .HasColumnType("int");

                    b.Property<int>("MinMedicalActionAssistant")
                        .HasColumnType("int");

                    b.Property<int>("MinNurseAnaesthetist")
                        .HasColumnType("int");

                    b.Property<int>("MinXRayTechnician")
                        .HasColumnType("int");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("anaesthesiaTime")
                        .HasColumnType("int");

                    b.Property<int?>("cleaningTime")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("surgeryTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("OperationType", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("490bd87e-09a9-47a6-93c0-3cc23c040487"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 30,
                            name = "ACL reconstruction",
                            surgeryTime = 60
                        },
                        new
                        {
                            Id = new Guid("c53367c3-88fc-4c7f-aad2-9d55add5f560"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 45,
                            name = "Knee replacement",
                            surgeryTime = 60
                        },
                        new
                        {
                            Id = new Guid("7568d7e7-c051-4fe0-9406-05eafc4d26ea"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 45,
                            name = "Shoulder replacement",
                            surgeryTime = 90
                        },
                        new
                        {
                            Id = new Guid("d318e3d0-cea0-4f9d-80b6-759628435998"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 45,
                            name = "Hip replacement",
                            surgeryTime = 75
                        },
                        new
                        {
                            Id = new Guid("3953d992-aa3a-482a-8da0-b7364776a783"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 20,
                            name = "Meniscal inury treatment",
                            surgeryTime = 45
                        },
                        new
                        {
                            Id = new Guid("07a7607e-7928-4b87-a7db-f47672e05e47"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 45,
                            cleaningTime = 30,
                            name = "Rotator cuff repair",
                            surgeryTime = 80
                        },
                        new
                        {
                            Id = new Guid("4c69349b-7bee-44d3-bcf3-7e52f551cbf0"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 30,
                            cleaningTime = 20,
                            name = "Ankle ligaments repair",
                            surgeryTime = 45
                        },
                        new
                        {
                            Id = new Guid("001c35e0-c535-44ca-8dde-10dfcb30b9e4"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 20,
                            cleaningTime = 15,
                            name = "Lumbar disectomy",
                            surgeryTime = 45
                        },
                        new
                        {
                            Id = new Guid("bbb20be3-add1-4d3f-9a03-cc1f15ae7c2a"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 15,
                            cleaningTime = 15,
                            name = "Trigger finger",
                            surgeryTime = 10
                        },
                        new
                        {
                            Id = new Guid("4d4a71f2-22dd-4216-8422-268a8fb0f161"),
                            MinAnesthetist = 0,
                            MinCirculatingNurse = 0,
                            MinDoctor = 0,
                            MinInstrumentingNurse = 0,
                            MinMedicalActionAssistant = 0,
                            MinNurseAnaesthetist = 0,
                            MinXRayTechnician = 0,
                            Specialization = 0,
                            Status = "ACTIVE",
                            anaesthesiaTime = 15,
                            cleaningTime = 15,
                            name = "Carpal tunnel syndrome",
                            surgeryTime = 10
                        });
                });

            modelBuilder.Entity("Backend.Domain.Patients.Allergy", b =>
                {
                    b.Property<Guid>("allergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("allergyName")
                        .HasColumnType("longtext");

                    b.HasKey("allergyId");

                    b.HasIndex("PatientId");

                    b.ToTable("Allergy");
                });

            modelBuilder.Entity("Backend.Domain.Patients.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MedicalRecordNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MedicalRecordNumber")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("UserEmail")
                        .IsUnique();

                    b.ToTable("Patient", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "7dd3d356-aaaf-4fa2-91a5-ab612f9b9512",
                            DateOfBirth = new DateOnly(2001, 10, 21),
                            Email = "patientA@hospital.com",
                            FullName = "João Camião",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000001",
                            PhoneNumber = "910555111",
                            UserEmail = "patientA@hospital.com"
                        },
                        new
                        {
                            Id = "df97308b-74fd-4461-accd-c6daaf70a410",
                            DateOfBirth = new DateOnly(1998, 5, 14),
                            Email = "patientB@hospital.com",
                            FullName = "Bruno Silva",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000002",
                            PhoneNumber = "910555222",
                            UserEmail = "patientB@hospital.com"
                        },
                        new
                        {
                            Id = "dcaddc0c-c95c-4746-ac97-4e04c3f0862f",
                            DateOfBirth = new DateOnly(1995, 12, 30),
                            Email = "patientC@hospital.com",
                            FullName = "Carla Ferreira",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000003",
                            PhoneNumber = "910555333",
                            UserEmail = "patientC@hospital.com"
                        },
                        new
                        {
                            Id = "57e171b5-e294-4512-b272-0ac0cf826ad2",
                            DateOfBirth = new DateOnly(1988, 5, 14),
                            Email = "patientD@hospital.com",
                            FullName = "David Oliveira",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000004",
                            PhoneNumber = "910555334",
                            UserEmail = "patientD@hospital.com"
                        },
                        new
                        {
                            Id = "ccff01c4-504c-4843-90a1-f1f672264305",
                            DateOfBirth = new DateOnly(1992, 8, 22),
                            Email = "patientE@hospital.com",
                            FullName = "Emma Sousa",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000005",
                            PhoneNumber = "910555335",
                            UserEmail = "patientE@hospital.com"
                        },
                        new
                        {
                            Id = "72f73b1c-74a6-4405-bb7b-93bf50f0cf6f",
                            DateOfBirth = new DateOnly(1985, 3, 10),
                            Email = "patientF@hospital.com",
                            FullName = "Felipe Costa",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000006",
                            PhoneNumber = "910555336",
                            UserEmail = "patientF@hospital.com"
                        },
                        new
                        {
                            Id = "e24567a6-07af-4a02-ab62-08d1bf8d20bb",
                            DateOfBirth = new DateOnly(2000, 11, 2),
                            Email = "patientG@hospital.com",
                            FullName = "Gabriela Santos",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000007",
                            PhoneNumber = "910555337",
                            UserEmail = "patientG@hospital.com"
                        },
                        new
                        {
                            Id = "d47df3e1-c48d-4090-a083-793a4654ceea",
                            DateOfBirth = new DateOnly(1990, 7, 19),
                            Email = "patientH@hospital.com",
                            FullName = "Henrique Almeida",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000008",
                            PhoneNumber = "910555338",
                            UserEmail = "patientH@hospital.com"
                        },
                        new
                        {
                            Id = "3b0a2db5-97fa-4db0-b05c-5b58471d5965",
                            DateOfBirth = new DateOnly(1994, 1, 15),
                            Email = "patientI@hospital.com",
                            FullName = "Isabel Pereira",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000009",
                            PhoneNumber = "910555339",
                            UserEmail = "patientI@hospital.com"
                        },
                        new
                        {
                            Id = "bde37e08-62ed-4213-9ea5-42f4e9a392b3",
                            DateOfBirth = new DateOnly(1982, 6, 8),
                            Email = "patientJ@hospital.com",
                            FullName = "João Lima",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000010",
                            PhoneNumber = "910555340",
                            UserEmail = "patientJ@hospital.com"
                        },
                        new
                        {
                            Id = "05b33510-bbb7-4593-95f2-3c8c511d09f2",
                            DateOfBirth = new DateOnly(1996, 9, 25),
                            Email = "patientK@hospital.com",
                            FullName = "Karina Martins",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000011",
                            PhoneNumber = "910555341",
                            UserEmail = "patientK@hospital.com"
                        },
                        new
                        {
                            Id = "e56adecb-ec01-4b7b-a601-ed038bc9fcc1",
                            DateOfBirth = new DateOnly(1987, 4, 12),
                            Email = "patientL@hospital.com",
                            FullName = "Lucas Rodrigues",
                            Gender = "Male",
                            MedicalRecordNumber = "202410000012",
                            PhoneNumber = "910555342",
                            UserEmail = "patientL@hospital.com"
                        },
                        new
                        {
                            Id = "846d0d23-fd94-4fdb-9903-a13ee6629946",
                            DateOfBirth = new DateOnly(1993, 12, 5),
                            Email = "patientM@hospital.com",
                            FullName = "Marta Silva",
                            Gender = "Female",
                            MedicalRecordNumber = "202410000013",
                            PhoneNumber = "910555343",
                            UserEmail = "patientM@hospital.com"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Staffs.Staff", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("IdentityUsername")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("StaffRole")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LicenseNumber")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Staff", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "50dfbfee-e1ce-4fe2-a93b-4e54d8d7d726",
                            Email = "pedro@hospital.com",
                            FullName = "Pedro Carvalho Oliveira Monteiro",
                            IdentityUsername = "pedro",
                            LicenseNumber = "f47ac10b-08cc-4372-a507-0e02b2d3d479",
                            PhoneNumber = "910555111",
                            StaffRole = "doctor"
                        },
                        new
                        {
                            Id = "951d83dd-0e0e-4d3e-9c3d-ae972e71e682",
                            Email = "andre@hospital.com",
                            FullName = "André de Sousa Ferreira",
                            IdentityUsername = "andre",
                            LicenseNumber = "f47ac10b-58cc-4372-a567-0e02b2c3d479",
                            PhoneNumber = "920555222",
                            StaffRole = "doctor"
                        },
                        new
                        {
                            Id = "dce5b8c2-29c0-4016-9bef-984f247f98e0",
                            Email = "tiago@hospital.com",
                            FullName = "Tiago Filipe Carvalho Nunes",
                            IdentityUsername = "tiago",
                            LicenseNumber = "f57ac10b-68cc-5372-a567-1e02b2c3d479",
                            PhoneNumber = "930555333",
                            StaffRole = "doctor"
                        },
                        new
                        {
                            Id = "407308ea-ea2c-417a-b043-2c84bc778ee6",
                            Email = "nurse@hospital.com",
                            FullName = "Nurse One",
                            IdentityUsername = "nurse",
                            LicenseNumber = "n47ac10b-58cc-4372-a567-0e02b2c3d481",
                            PhoneNumber = "910555567",
                            StaffRole = "nurse"
                        });
                });

            modelBuilder.Entity("Backend.Domain.SurgeryRooms.SurgeryRoom", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AssignedEquipment")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("MaintenanceSlots")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("RoomStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("SurgeryRoom", "projeto5sem");

                    b.HasData(
                        new
                        {
                            Id = "494736ae-6226-4bf3-80a4-a9d16eb3088d",
                            AssignedEquipment = "[\"Scalpel\",\"Monitor\"]",
                            Capacity = 10,
                            MaintenanceSlots = "[\"28/10/2024=[09:30,10:00];\"]",
                            Number = 200,
                            RoomStatus = "Available",
                            RoomType = "OperatingRoom"
                        },
                        new
                        {
                            Id = "128b6c00-2298-4283-a22e-1dd306128464",
                            AssignedEquipment = "[\"Scalpel\",\"Monitor\",\"Table\"]",
                            Capacity = 10,
                            MaintenanceSlots = "[\"28/10/2024=[12:30,13:00];\"]",
                            Number = 201,
                            RoomStatus = "Available",
                            RoomType = "OperatingRoom"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Appointments.Appointment", b =>
                {
                    b.HasOne("Backend.Domain.OperationRequests.OperationRequest", "OperationRequest")
                        .WithMany("Appointments")
                        .HasForeignKey("OperationRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.SurgeryRooms.SurgeryRoom", "SurgeryRoom")
                        .WithMany("Appointments")
                        .HasForeignKey("SurgeryRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationRequest");

                    b.Navigation("SurgeryRoom");
                });

            modelBuilder.Entity("Backend.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.HasOne("Backend.Domain.OperationTypes.OperationType", "operationType")
                        .WithMany("OperationRequests")
                        .HasForeignKey("operationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.Patients.Patient", "patient")
                        .WithMany("OperationRequests")
                        .HasForeignKey("patientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.Staffs.Staff", "staff")
                        .WithMany("OperationRequests")
                        .HasForeignKey("staffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("operationType");

                    b.Navigation("patient");

                    b.Navigation("staff");
                });

            modelBuilder.Entity("Backend.Domain.Patients.Allergy", b =>
                {
                    b.HasOne("Backend.Domain.Patients.Patient", null)
                        .WithMany("Allergies")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Backend.Domain.OperationRequests.OperationRequest", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Backend.Domain.OperationTypes.OperationType", b =>
                {
                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("Backend.Domain.Patients.Patient", b =>
                {
                    b.Navigation("Allergies");

                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("Backend.Domain.Staffs.Staff", b =>
                {
                    b.Navigation("OperationRequests");
                });

            modelBuilder.Entity("Backend.Domain.SurgeryRooms.SurgeryRoom", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
